<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不熬夜的喵</title>
  
  <subtitle>夏天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-02T08:41:26.962Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>LiuLi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用Hexo+GitHub搭建个人博客(二)</title>
    <link href="http://yoursite.com/2019/09/30/hexo/hexo%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/09/30/hexo/hexo配置/</id>
    <published>2019-09-30T06:55:00.000Z</published>
    <updated>2019-10-02T08:41:26.962Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>安装好hexo后，可进行各项配置</p></blockquote><h3 id="关于页面"><a href="#关于页面" class="headerlink" title="关于页面"></a>关于页面</h3><p>使用：<code>hexo new page “about”</code>新建一个 关于我 页面。<br>主题的<code>_config.yml</code>文件中的 <code>menu</code> 中进行匹配<br>不同主题 <code>_config. yml</code>文件有区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /      //主页</span><br><span class="line">  categories: /categories //分类</span><br><span class="line">  archives: /archives   //归档</span><br><span class="line">  tags: /tags   //标签</span><br><span class="line">  about: /about   //关于                  （添加此行即可）</span><br><span class="line">或    </span><br><span class="line">menu:</span><br><span class="line">  - page: home</span><br><span class="line">    directory: .      //主页</span><br><span class="line">    icon: fa-home</span><br><span class="line">  - page: archive</span><br><span class="line">    directory: archives/    //归档</span><br><span class="line">    icon: fa-archive</span><br><span class="line">  - page: about</span><br><span class="line">    directory: about/    //关于</span><br><span class="line">    icon: fa-user</span><br><span class="line">  - page: rss</span><br><span class="line">    directory: atom.xml    //rss订阅</span><br><span class="line">    icon: fa-rss</span><br></pre></td></tr></table></figure><p>编辑 about 关于页面 md文件 部署就能看到</p><h3 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h3><p>使用： <code>hexo new page categories</code> 新建一个 分类 页面。<br>主题的 <code>_config.yml</code> 文件中的 <code>menu</code> 中进行匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /      //主页</span><br><span class="line">  categories: /categories //分类   </span><br><span class="line">  archives: /archives   //归档</span><br><span class="line">  tags: /tags   //标签                  </span><br><span class="line">  about: /about   //关于</span><br></pre></td></tr></table></figure><p>底下代码是一篇包含 分类 文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类测试</span><br><span class="line">categories:</span><br><span class="line">- hexo                       （这个就是文章的分类了）</span><br></pre></td></tr></table></figure><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>hexo博客有一个专门生成RSS xml文件的插件<code>hexo-generator-feed</code><br>我们来安装它</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><p>看到<code>added 3 packages</code>说明安装成功了。</p><h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h4><p>在博客工程文件根目录下<code>_config.yml</code>文件中添加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">plugins:</span><br><span class="line">    hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 20</span><br></pre></td></tr></table></figure><h4 id="生成RSS"><a href="#生成RSS" class="headerlink" title="生成RSS"></a>生成RSS</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">(node:6520) [DEP0061] DeprecationWarning: fs.SyncWriteStream is depre                                                                                                                           cated.</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 6.33 s</span><br><span class="line">INFO  Generated: atom.xml &lt;----------成功生成atom.xml文件</span><br><span class="line">INFO  Generated: sitemap.xml</span><br><span class="line">INFO  Generated: baidusitemap.xml</span><br><span class="line">INFO  Generated: about/index.html</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;安装好hexo后，可进行各项配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;关于页面&quot;&gt;&lt;a href=&quot;#关于页面&quot; class=&quot;headerlink&quot; title=&quot;关于页面&quot;&gt;&lt;/a&gt;关于页面&lt;/h3&gt;&lt;p&gt;使用：&lt;code&gt;he
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>利用Hexo+GitHub搭建个人博客(一)</title>
    <link href="http://yoursite.com/2019/09/30/hexo/%E5%88%A9%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/09/30/hexo/利用Hexo+GitHub搭建个人博客/</id>
    <published>2019-09-30T05:55:00.000Z</published>
    <updated>2019-10-02T08:41:54.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很久以前的一个想法，就是搭建一个个人博客，把个人在学习、生活中的故事记录下来。<code>hexo</code>让我的想法变成了现实。<br>下面就简单说一下整体打搭建流程。</p><h2 id="搭建步骤："><a href="#搭建步骤：" class="headerlink" title="搭建步骤："></a>搭建步骤：</h2><blockquote><p>最开始以为要把hexo安装到服务器上，后来了解后恍然大悟，他是在本地安装的，然后将我们写的markdown文件转换为静态网站文件，放到github上，利用github来作为服务器的。</p></blockquote><ol><li>安装git bash。</li><li>安装npm。</li><li>安装NodeJs</li><li>申请github账户，并创建一个仓库，命名规范为  “账户名”.github.io。</li><li>创建SSH并添加到github上。</li><li>安装hexo。</li><li>部署项目，本地测试。</li><li>上传到github上。</li></ol><p>到这一步，博客就搭建好了，域名可选择性进行关联。后续可以设置主题、添加RSS、设置评论、以及写文章。具体可参考<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很久以前的一个想法，就是搭建一个个人博客，把个人在学习、生活中的故事记录下来。&lt;code&gt;hexo&lt;/code&gt;让我的想法变成了现实。&lt;br
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MySql常用信息函数</title>
    <link href="http://yoursite.com/2017/01/12/mysql/mysql%E5%B8%B8%E7%94%A8%E4%BF%A1%E6%81%AF%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2017/01/12/mysql/mysql常用信息函数/</id>
    <published>2017-01-12T08:59:00.000Z</published>
    <updated>2019-10-02T08:40:22.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 管理员登录</span></span><br><span class="line">mysql -uroot</span><br><span class="line"><span class="comment">-- 查看当前服务器版本</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();</span><br><span class="line"><span class="comment">-- 查看当前使用的数据库</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>();</span><br><span class="line"><span class="comment">-- 当前用户</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">current_user</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询当前日期、时间、日期+时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">curdate</span>(),<span class="keyword">curtime</span>(),<span class="keyword">now</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">current_date</span>(),<span class="keyword">current_time</span>(),<span class="keyword">current_timestamp</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示所有表</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line"><span class="comment">-- 显示所有库</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="comment">-- 查看标准建库语句</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> db_name;</span><br><span class="line"><span class="comment">-- 查看标准建表语句</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> tb_name;</span><br><span class="line"><span class="comment">-- 查看表字段信息</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">full</span> <span class="keyword">columns</span> <span class="keyword">from</span> tname;</span><br><span class="line"><span class="comment">-- 显示当前数据库服务器支持的存储引擎</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">engines</span>;</span><br><span class="line"><span class="comment">-- 查询当前服务器所支持的字符集。</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">charset</span>;</span><br></pre></td></tr></table></figure><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><ul><li>MyISAM 不支持事务，速度快，引用最多的引擎</li><li>InnoDB 支持事务</li></ul><h2 id="常见支持简体中文的字符集"><a href="#常见支持简体中文的字符集" class="headerlink" title="常见支持简体中文的字符集"></a>常见支持简体中文的字符集</h2><p>我国定制，支持中文简体、繁体 日文。<br>gb2312 简体中文，只支持6763简体汉字<br>gbk 简繁体支持<br>gb18030 </p><p>utf-8 美国制定，支持所有国家语言</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基本命令&quot;&gt;&lt;a href=&quot;#基本命令&quot; class=&quot;headerlink&quot; title=&quot;基本命令&quot;&gt;&lt;/a&gt;基本命令&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
    
      <category term="MySql" scheme="http://yoursite.com/categories/MySql/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Git远程操作详解</title>
    <link href="http://yoursite.com/2016/01/11/git/Git%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2016/01/11/git/Git远程操作详解/</id>
    <published>2016-01-11T08:22:00.000Z</published>
    <updated>2019-10-02T08:42:18.966Z</updated>
    
    <content type="html"><![CDATA[<p>Git有很多优势，其中之一就是远程操作非常简便。本文详细介绍5个Git命令，它们的概念和用法，理解了这些内容，你就会完全掌握Git远程操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone</span><br><span class="line"></span><br><span class="line">git remote</span><br><span class="line"></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>本文针对初级用户，从最简单的讲起，但是需要读者对Git的基本用法有所了解。同时，本文覆盖了上面5个命令的几乎所有的常用用法，所以对于熟练用户也有参考价值。</p><h2 id="一、git-clone"><a href="#一、git-clone" class="headerlink" title="一、git clone"></a>一、git clone</h2><p>远程操作的第一步，通常是从远程主机克隆一个版本库，这时就要用到git clone命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git clone &lt;版本库的网址&gt;</span><br></pre></td></tr></table></figure><p>比如，克隆jQuery的版本库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jquery/jquery.git</span><br></pre></td></tr></table></figure><p>该命令会在本地主机生成一个目录，与远程主机的版本库同名。如果要指定不同的目录名，可以将目录名作为git clone命令的第二个参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;版本库的网址&gt; &lt;本地目录名&gt;</span><br></pre></td></tr></table></figure><p>git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> git clone http[s]://example.com/path/to/repo.git/</span><br><span class="line"> git clone ssh://example.com/path/to/repo.git/</span><br><span class="line"> git clone git://example.com/path/to/repo.git/</span><br><span class="line"> git clone /opt/git/project.git </span><br><span class="line"> git clone file:///opt/git/project.git</span><br><span class="line"> git clone ftp[s]://example.com/path/to/repo.git/</span><br><span class="line"> git clone rsync://example.com/path/to/repo.git/</span><br></pre></td></tr></table></figure><p>SSH协议还有另一种写法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git clone [user@]example.com:path/to/repo.git/</span><br></pre></td></tr></table></figure><p>通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。各种协议优劣的详细讨论请参考官方文档。</p><h2 id="二、git-remote"><a href="#二、git-remote" class="headerlink" title="二、git remote"></a>二、git remote</h2><p>为了便于管理，Git要求每个远程主机都必须指定一个主机名。git remote命令就用于管理主机名。</p><p>不带选项的时候，git remote命令列出所有远程主机。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote</span><br><span class="line">origin</span><br></pre></td></tr></table></figure><p>使用-v选项，可以参看远程主机的网址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> git remote -v</span><br><span class="line">origin  git@github.com:jquery/jquery.git (fetch)</span><br><span class="line">origin  git@github.com:jquery/jquery.git (push)</span><br></pre></td></tr></table></figure><p>上面命令表示，当前只有一台远程主机，叫做origin，以及它的网址。</p><p>克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> git clone -o jQuery https://github.com/jquery/jquery.git</span><br><span class="line"> git remote</span><br><span class="line">jQuery</span><br></pre></td></tr></table></figure><p>上面命令表示，克隆的时候，指定远程主机叫做jQuery。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git remote show命令加上主机名，可以查看该主机的详细信息。</span><br><span class="line"> git remote show &lt;主机名&gt;</span><br><span class="line">git remote add命令用于添加远程主机。</span><br><span class="line"> git remote add &lt;主机名&gt; &lt;网址&gt;</span><br><span class="line">git remote rm命令用于删除远程主机。</span><br><span class="line"> git remote rm &lt;主机名&gt;</span><br><span class="line">git remote rename命令用于远程主机的改名。</span><br><span class="line"> git remote rename &lt;原主机名&gt; &lt;新主机名&gt;</span><br></pre></td></tr></table></figure><h2 id="三、git-fetch"><a href="#三、git-fetch" class="headerlink" title="三、git fetch"></a>三、git fetch</h2><p>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到git fetch命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git fetch &lt;远程主机名&gt;</span><br></pre></td></tr></table></figure><p>上面命令将某个远程主机的更新，全部取回本地。</p><p>git fetch命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。</p><p>默认情况下，git fetch取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br></pre></td></tr></table></figure><p>比如，取回origin主机的master分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git fetch origin master</span><br></pre></td></tr></table></figure><p>所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。比如origin主机的master，就要用origin/master读取。</p><p>git branch命令的-r选项，可以用来查看远程分支，-a选项查看所有分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> git branch -r</span><br><span class="line">origin/master</span><br><span class="line"> git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure><p>上面命令表示，本地主机的当前分支是master，远程分支是origin/master。</p><p>取回远程主机的更新以后，可以在它的基础上，使用git checkout命令创建一个新的分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git checkout -b newBrach origin/master</span><br></pre></td></tr></table></figure><p>上面命令表示，在origin/master的基础上，创建一个新分支。</p><p>此外，也可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git merge origin/master</span><br></pre></td></tr></table></figure><p># 或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git rebase origin/master</span><br></pre></td></tr></table></figure><p>上面命令表示在当前分支上，合并origin/master。</p><h2 id="四、git-pull"><a href="#四、git-pull" class="headerlink" title="四、git pull"></a>四、git pull</h2><p>git pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br></pre></td></tr></table></figure><p>比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git pull origin next:master</span><br></pre></td></tr></table></figure><p>如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git pull origin next</span><br></pre></td></tr></table></figure><p>上面命令表示，取回origin/next分支，再与当前分支合并。实质上，这等同于先做git fetch，再做git merge。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> git fetch origin</span><br><span class="line"> git merge origin/next</span><br></pre></td></tr></table></figure><p>在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动”追踪”origin/master分支。</p><p>Git也允许手动建立追踪关系。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream master origin/next</span><br></pre></td></tr></table></figure><p>上面命令指定master分支追踪origin/next分支。</p><p>如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git pull origin</span><br></pre></td></tr></table></figure><p>上面命令表示，本地的当前分支自动与对应的origin主机”追踪分支”（remote-tracking branch）进行合并。</p><p>如果当前分支只有一个追踪分支，连远程主机名都可以省略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git pull</span><br></pre></td></tr></table></figure><p>上面命令表示，当前分支自动与唯一一个追踪分支进行合并。</p><p>如果合并需要采用rebase模式，可以使用–rebase选项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git pull --rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br></pre></td></tr></table></figure><p>如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。</p><p>但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> git pull -p</span><br><span class="line"># 等同于下面的命令</span><br><span class="line"> git fetch --prune origin </span><br><span class="line"> git fetch -p</span><br></pre></td></tr></table></figure><h2 id="五、git-push"><a href="#五、git-push" class="headerlink" title="五、git push"></a>五、git push</h2><p>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure><p>注意，分支推送顺序的写法是&lt;来源地&gt;:&lt;目的地&gt;，所以git pull是&lt;远程分支&gt;:&lt;本地分支&gt;，而git push是&lt;本地分支&gt;:&lt;远程分支&gt;。</p><p>如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push origin master</span><br></pre></td></tr></table></figure><p>上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。</p><p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push origin :master</span><br></pre></td></tr></table></figure><p># 等同于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push origin --delete master</span><br></pre></td></tr></table></figure><p>上面命令表示删除origin主机的master分支。</p><p>如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push origin</span><br></pre></td></tr></table></figure><p>上面命令表示，将当前分支推送到origin主机的对应分支。</p><p>如果当前分支只有一个追踪分支，那么主机名都可以省略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push</span><br></pre></td></tr></table></figure><p>如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push -u origin master</span><br></pre></td></tr></table></figure><p>上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。</p><p>不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git config --global push.default matching</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git config --global push.default simple</span><br></pre></td></tr></table></figure><p>还有一种情况，就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push --all origin</span><br></pre></td></tr></table></figure><p>上面命令表示，将所有本地分支都推送到origin主机。</p><p>如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用–force选项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push --force origin</span><br></pre></td></tr></table></figure><p>上面命令使用–force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用–force选项。</p><p>最后，git push不会推送标签（tag），除非使用–tags选项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> git push origin --tags</span><br></pre></td></tr></table></figure><p>（完）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Git有很多优势，其中之一就是远程操作非常简便。本文详细介绍5个Git命令，它们的概念和用法，理解了这些内容，你就会完全掌握Git远程操作。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="IDE" scheme="http://yoursite.com/categories/IDE/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Android应用的基本组件</title>
    <link href="http://yoursite.com/2015/04/29/android/base/Android%E5%BA%94%E7%94%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/"/>
    <id>http://yoursite.com/2015/04/29/android/base/Android应用的基本组件/</id>
    <published>2015-04-29T09:35:00.000Z</published>
    <updated>2019-10-02T08:41:02.792Z</updated>
    
    <content type="html"><![CDATA[<p>Android系统中有著名的四大组件：Activity、Service、BroadcastReceiver、ContentProvider。一个商业的Android应用程序，通常由多个基本的组件联合组成。这四大组件，在使用的时候均需要在清单文件AndroidManifest.xml中进行注册，否则不予使用。本小节将对这些组件进行简单的介绍，使读者对Android应用开发的内容有一个大致的认识。</p><h2 id="活动（Activity）"><a href="#活动（Activity）" class="headerlink" title="活动（Activity）"></a>活动（Activity）</h2><p>Activity是Android应用中，最直接与用户接触的组件，它负责加载View组件，使其展现给用户，并保持与用户的交互。所有的Activity组件均需要继承Activity类，这是一个Content的间接子类，包装了一些Activity的基本特性。</p><p>View组件是所有UI组件、容器组件的基类，也就是说，它可以是一个布局容器，也可以是一个布局容器内的基本UI组件。View组件一般通过XML布局资源文件定义，同时Android系统也对这些View组件提供了对应的实现类。如果需要通过某个Activity把指定的View组件显示出来，调用Activity的setContentView()方法即可，它具有多个重载方法，可以传递一个XML资源ID或者View对象。</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LinearLayout layout=<span class="keyword">new</span> LinearLayout(<span class="keyword">this</span>);</span><br><span class="line">setContentView(layout)；</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setContentView(R.layout.main);</span><br></pre></td></tr></table></figure><p>Activity为Android应用提供了一个用户界面，当一个Activity被开启之后，它具有自己的生命周期。Activity类也对这些生命周期提供了对应的方法，如果需要对Activity各个不同的生命周期做出响应，可以重写这些生命周期方法实现。对于大多数商业应用而言，整个系统中包含了多个Activity，在应用中逐步导航跳转开启这些Activity之后，会形成Activity的回退栈，当前显示并获得焦点的Activity位于这个回退栈的栈顶。</p><h2 id="服务（Service）"><a href="#服务（Service）" class="headerlink" title="服务（Service）"></a>服务（Service）</h2><p>Service主要用于在后台完成一些无需向用户展示界面的功能实现。通常位于系统后台运行，它一般不需要与用户进行交互，因此Service组件没有用户界面展示给用户。Service主要用于完成一些类似于下载文件、播放音乐等无需用户界面与用户进行交互的功能。<br>与Activity组件需要继承Activity类相似，Service组件同样需要继承Service类，Service类也是Context的间接子类，其中包装了一些Service的专有特性。一个Service被运行起来之后，它将具有自己独立的生命周期，Service类中对其各个不同的生命周期提供了对应的方法，开发人员可以通过在Service中重写Service类中这些生命周期方法，来响应Service各个生命周期的功能实现。</p><h2 id="广播接收器（BroadcastReceiver）"><a href="#广播接收器（BroadcastReceiver）" class="headerlink" title="广播接收器（BroadcastReceiver）"></a>广播接收器（BroadcastReceiver）</h2><p>BroadcastReceiver同样也是Android系统中的一个重要组件，BroadcastReceiver代表了一个广播接收器，用于接收系统中其它组件发送的广播，并对其进行响应或是拦截广播的继续传播。<br>广播是一个系统级的消息，当系统环境发生改变的时候会发送一些广播供对应的程序进行接收响应，例如：接收到一条短信、开机、关机、插上充电器、插上耳机、充电完成等，均会发送一条广播供需要监听此类广播的应用进行响应。除了一些系统事件的广播，开发人员也可以自定义广播内容。但是大部分情况下，开发应用的时候主要用于接受系统广播并对其进行响应，很少需要发送自定义的广播。<br>使用BroadcastReceiver组件接收广播非常的简单，只需要实现自己的BroadcastReceiver子类，并重写onReceive()方法，就能完成BroadcastReceiver，而对于这个BroadcastReceiver对什么广播感兴趣，则需要对其进行另行配置。</p><h2 id="内容提供者（ContentProvider）"><a href="#内容提供者（ContentProvider）" class="headerlink" title="内容提供者（ContentProvider）"></a>内容提供者（ContentProvider）</h2><p>Android系统作为一个智能操作系统，它需要系统中运行的应用程序都必须是相互独立的，各自运行在自己的Dalvik VM实例中。在正常情况下，Android应用之间是不能进行实时的数据交换，而考虑到有些应用的数据需要对外进行共享，Android系统提供了一个标准的数据接口ContentProvider，通过应用提供的ContentProvider，可以在其它应用中对这个应用的暴露出来的数据进行增删改查。<br>为应用程序暴露数据接口非常的简单，只需要继承ContentProvider类，并且实现insert()、delete()、update()、query()等方法，使外部应用可对本应用的数据进行增删改查。</p><h2 id="意图（Intent）"><a href="#意图（Intent）" class="headerlink" title="意图（Intent）"></a>意图（Intent）</h2><p>虽然Intent并不是Android应用的组件，也无需专门在清单文件中配置，但是它对于Android应用的作用非常的大。除了ContentProvider之外，其它组件的启动，均需要通过Intent进行指定。Intent不仅可以明确指定一个Android组件进行启动，还可以提供一个标准的行为，再由Android系统配合意图过滤器来选定启动指定组件来完成任务。而Intent在开启对组件的过程中，进行各个组件间数据的传递。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本章简要介绍了Android系统的发展史及其现状，并且介绍了Android系统的架构与Dalvik VM虚拟机，最后还简单介绍了Android开发中的四大组件。通过阅读本章，对Android的历史与现状、系统架构、基本组件有个大致的了解，这对本书接下来的内容理解非常有帮助。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Android系统中有著名的四大组件：Activity、Service、BroadcastReceiver、ContentProvider。一个商业的Android应用程序，通常由多个基本的组件联合组成。这四大组件，在使用的时候均需要在清单文件AndroidManifest
      
    
    </summary>
    
    
      <category term="Android基础" scheme="http://yoursite.com/categories/Android%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>android发展史及系统架构</title>
    <link href="http://yoursite.com/2015/04/29/android/base/android%E5%8F%91%E5%B1%95%E5%8F%B2%E5%8F%8A%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/"/>
    <id>http://yoursite.com/2015/04/29/android/base/android发展史及系统架构/</id>
    <published>2015-04-29T09:32:00.000Z</published>
    <updated>2019-10-02T08:40:59.303Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-1-Android发展史与现状"><a href="#1-1-Android发展史与现状" class="headerlink" title="1.1 Android发展史与现状"></a>1.1 Android发展史与现状</h2><p>Andy Rubin创立22个月后→（2005年）Google收购。</p><p>2008 Patrick Brady于Google I/O 演讲“Anatomy &amp; Physiology of an Android”，并提出的 Android HAL 架构图。</p><h3 id="Android版本升级"><a href="#Android版本升级" class="headerlink" title="Android版本升级"></a>Android版本升级</h3><p>Android系统今后将继续每半年一次的升级步伐，分别定在每年的夏天和年终。每代Android系统都将以食物命名，比如1.5版叫做 Cupcake(纸杯蛋糕)，1.6版为Donut(甜甜圈)，然后是Eclair(法式奶油夹心甜点)和Flan(水果馅饼)。Donut将把社交网络功能作为升级重点，在“手机的各种体验中”都增加社交网络元素。  </p><h4 id="1-5-Cupcake"><a href="#1-5-Cupcake" class="headerlink" title="1.5 (Cupcake)"></a>1.5 (Cupcake)</h4><p>基于Linux Kernel 2.6.27 2009年4月30日，官方1.5版本(Cupcake)的Android发布。主要的更新如下:<br>● 拍摄/回放视频，并支持上传到youtube<br>● 支持立体声蓝牙耳机，同时改善自动配对性能<br>● 最新的采用WebKit技术的浏览器，支持拷贝/粘帖和页面中搜索<br>● GPS性能大大提高<br>● 屏幕虚拟键盘<br>● 主屏幕增加音乐播放器和相框widgets<br>● 应用程序自动随着手机旋转<br>● 短信，Gmail，日历，浏览器的用户界面大幅改善，比如说Gmail现在可以批量删除邮件了<br>● 相机启动速度加快，拍摄图片可以直接上传到picasa<br>● 来电照片显示  </p><h4 id="1-6-Donut"><a href="#1-6-Donut" class="headerlink" title="1.6 (Donut)"></a>1.6 (Donut)</h4><p>基于Linux Kernel 2.6.29 2009年9月15日, 1.6(Donut)版本SDK发布。主要的更新如下:<br>● 完全重新设计的Android Market<br>● 手势支持<br>● 支持CDMA网络<br>● 文字转语音系统(TXT-2-speech)<br>● 快速搜索框<br>● 全新的拍照界面<br>● 应用程序耗电查看<br>● 支持VPN<br>● 支持更多的屏幕分辨率<br>● 支持OpenCore2媒体引擎<br>● 新增面向视觉或听觉困难人群的易用性插件  </p><h4 id="2-0-2-0-1-2-1-Eclair"><a href="#2-0-2-0-1-2-1-Eclair" class="headerlink" title="2.0/2.0.1/2.1(Eclair)"></a>2.0/2.0.1/2.1(Eclair)</h4><p>基于Linux Kernel 2.6.29 2009年10月26日, 2.0(Eclair)版本SDK发布。主要的更新如下:<br>● 优化硬件速度<br>● “Car Home”程序<br>● 支持更多的屏幕分辨率<br>● 重整界面<br>● 新的浏览器的用户界面和支持HTML5<br>● 新的联系人名单<br>● 更好的白色/黑色背景比率<br>● 改进Google Maps 3.1.2<br>● 支持Microsoft Exchange<br>● 支持内置相机闪光灯<br>● 数字变焦<br>● 改进的虚拟键盘<br>● 蓝牙2.1<br>Android的代号序列会按甜点名字中首个英文字母(C、D、E、F)的排列顺序。<br>下一个版本的Android将会命名为Froyo(冻酸奶,基于Linux Kernel 2.6.32)。Froyo 之后的版本的Android将会命名为Gingerbread(姜饼,基于Linux Kernel 2.6.33/34)。</p><p><strong>Android**</strong>版本**</p><p><strong>发布日期</strong></p><p><strong>代号</strong></p><p><strong>Android 1.1</strong></p><p><strong>Android 1.5</strong></p><p>2009年4月30日</p><p>Cupcake（纸杯蛋糕）</p><p><strong>Android 1.6</strong></p><p>2009年9月15日</p><p>Donut（炸面圈）</p><p><strong>Android 2.0/2.1</strong></p><p>2009年10月26日</p><p>Eclair（长松饼）</p><p><strong>Android 2.2</strong></p><p>2010年5月20日</p><p>Froyo（冻酸奶）</p><p><strong>Android 2.3</strong></p><p>2010年12月6日</p><p>Gingerbread（姜饼）</p><p><strong>Android 3.0/3.1/3.2</strong></p><p>2011年2月22日</p><p>Honeycomb（蜂巢）</p><p><strong>Android 4.0</strong></p><p>2011年10月19日</p><p>Ice Cream Sandwich（冰淇淋三明治）</p><p><strong>Android 4.1</strong></p><p>2012年6月28日</p><p>Jelly Bean（果冻豆）</p><p><strong>Android 4.2</strong></p><p>2012年10月8日</p><p>Jelly Bean（果冻豆）</p><p><strong>Android5.0</strong></p><p>待定</p><p>Lime Pie（酸橙派）</p><h3 id="1-2-Android系统的架构与特性"><a href="#1-2-Android系统的架构与特性" class="headerlink" title="1.2 Android系统的架构与特性"></a>1.2 Android系统的架构与特性</h3><h4 id="1-2-1-Android系统架构"><a href="#1-2-1-Android系统架构" class="headerlink" title="1.2.1 Android系统架构"></a>1.2.1 Android系统架构</h4><p>Android系统的底层是建立在Linux系统之上的，它采用软件叠层（Software Stack）的方式进行构建。使得层与层之间相互分离，明确各层的分工。这种分工保证了层与层之间的低苟合，当下层发生改变的时候，上层应用程序无需做任何改变。</p><p>下图为Android系统的系统架构图：</p><p><img src="http://s1.51cto.com/wyfs02/M01/25/73/wKioL1NgW-Si7ae7AAEJ_vZkaJ0908.jpg" alt></p><p>如图可知，Android系统分为四个层，从高到底分别是：应用程序层（Application）、应用程序框架层（Application Framework）、系统运行库层（Libraries）和Linux内核层（Linux Kernel）。</p><p>Android操作系统可以在四个主要层面上分为5个部分：</p><h5 id="1-应用程序层（Application）"><a href="#1-应用程序层（Application）" class="headerlink" title="1. 应用程序层（Application）"></a>1. 应用程序层（Application）</h5><p>Android系统包含了一系列核心应用程序，包括电子邮件、短信SMS、日历、拨号器、地图、浏览器、联系人等。这些应用程序都是用Java语言编写。本书重点讲解如何编写Android系统上运行的应用程序，在程序分层上，与系统核心应用程序平级。</p><h5 id="2-应用程序框架层（Application-Framework）"><a href="#2-应用程序框架层（Application-Framework）" class="headerlink" title="2. 应用程序框架层（Application Framework）"></a>2. 应用程序框架层（Application Framework）</h5><p>Android应用程序框架提供了大量的API供开发人员使用，Android应用程序的开发，就是调用这些API，根据需求实现功能。</p><p>应用程序框架是应用程序的基础。为了软件的复用，任何一个应用程序都可以开发Android系统的功能模块，只要发布的时候遵循应用程序框架的规范，其它应用程序也可以使用这个功能模块。</p><h5 id="3-系统运行库层（Libraries）"><a href="#3-系统运行库层（Libraries）" class="headerlink" title="3. 系统运行库层（Libraries）**"></a>3. 系统运行库层（Libraries）**</h5><p>Android系统运行库是用C/C++语言编写的，是一套被不同组件所使用的函数库组成的集合。一般来说，Android应用开发者无法直接调用这套函数库，都是通过它上层的应用程序框架提供的API来对这些函数库进行调用。</p><p>下面对一些核心库进行简单的介绍：</p><blockquote><p><strong>Libc：</strong>从BSD系统派生出来的标准C系统库，在此基础之上，为了便携式Linux系统专门进行了调整。</p><p><strong>Medio Framework：</strong>基于PacketView的OpenCORE，这套媒体库支持播放与录制硬盘及视频格式的文件，并能查看静态图片。</p><p><strong>Surface Manager：</strong>在执行多个应用程序的时，负责管理显示与存取操作间的互动，同时负责2D绘图与3D绘图进行显示合成。</p><p><strong>WebKit：</strong>Web浏览器引擎，该引擎为Android浏览器提供支持。</p><p><strong>SGL：</strong>底层的2D图像引擎。</p><p><strong>3D libraries：</strong>基于OpenGL ES 1.0API，提供使用软硬件实现3D加速的功能。</p><p><strong>FreeType：</strong>提供位图和向量字体的支持。</p><p><strong>SQLite：</strong>轻量级的关系型数据库。</p></blockquote><h5 id="4-Android运行时"><a href="#4-Android运行时" class="headerlink" title="4. Android运行时**"></a>4. Android运行时**</h5><pre><code>Android运行时由两部分完成：Android核心库和Dalvik虚拟机。其中核心库集提供了Java语言核心库所能使用的绝大部分功能，Dalvik虚拟机负责运行Android应用程序。虽然Android应用程序通过Java语言编写，而每个Java程序都会在Java虚拟机JVM内运行，但是Android系统毕竟是运行在移动设备上的，由于硬件的限制， Android应用程序并不使用Java的虚拟机JVM来运行程序，而是使用自己独立的虚拟机Dalvik VM，它针对多个同时高效运行的虚拟机进行了优化。每个Android应用程序都运行在单独的一个Dalvik虚拟机内，因此Android系统可以方便对应用程序进行隔离。</code></pre><h5 id="5-Linux内核"><a href="#5-Linux内核" class="headerlink" title="5. Linux内核"></a>5. Linux内核</h5><p>Android系统是基于Linux2.6之上建立的操作系统，它的Linux内核为Android系统提供了安全性、内存管理、进程管理、网络协议栈、驱动模型等核心系统服务。Linux内核帮助Android系统实现了底层硬件与上层软件之间的抽象。</p><h4 id="1-2-2-Dalvik-VM和JVM的区别"><a href="#1-2-2-Dalvik-VM和JVM的区别" class="headerlink" title="1.2.2 Dalvik VM和JVM的区别"></a>1.2.2 Dalvik VM和JVM的区别</h4><p>JVM（Java虚拟机）是一个虚构出来的运行Java程序的运行时，是通过在实际的计算机上仿真模拟各种计算机功能的实现。它具有完善的硬件架构（如处理器、堆栈、寄存器等），还具有相应的指令系统，使用JVM就是使Java程序支持与操作系统无关。理论上在任何操作系统中，只要有对应的JVM，即可运行Java程序。</p><p>Dalvik VM是在Android系统上运行Android程序的虚拟机，其指令集是基于寄存器架构的，执行特有的文件格式-dex字节码来完成对象生命周期管理、堆栈管理、线程管理、安全异常管理、垃圾回收等重要功能。</p><p>由于Android应用程序的开发编程语言是Java，而Java程序运行在JVM（Java虚拟机）上的，因此有些人会把Android的虚拟机DalvikVM和JVM弄混淆，但是实际上Dalvik并未遵守JVM规范，而且两者也是互不兼容。</p><p>从Dalvik VM和JVM的编译过程分析，它们的编译过程如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JVM：.java→.class→.jar</span><br><span class="line">Dalvik VM：.java→.class→.dex</span><br></pre></td></tr></table></figure><p>从它们的编译过程可以看出，JVM运行的是.class文件的Java字节码，但是Dalvik VM运行的是其转换后的dex（Dalvik Executable）文件。JVM字节从.class文件或者JAR包中加载字节码然后运行，而Dalvik VM无法直接从.class文件或JAR包中加载字节码，它需要通过DX工具将应用程序所有的.class文件编译成一个.dex文件，Dalvik VM则运行这个.dex文件。</p><p>下图显示了Dalvik VM与JVM编译过程的区别：</p><p><img src="http://s4.51cto.com/wyfs02/M01/25/73/wKiom1NgXMOTVyNiAAB-h8_94xE986.jpg" alt></p><p>从图中可以看出，Dalvik VM把.java文件编译成.class后，会对.class进行重构，整合的基本元素（常量池、类定义、数据段）,最后压缩写进一个.dex文件中。其中，常量池描述了所有的常量，包括引用、方法名、数值常量等；类定义包括访问标识、类名等基本信息；数据段中包含各种被VM指定的方法代码以及类和方法的相关信息和实例变量。这种把多个.class文件进行整合的方法，大大提高了Android程序的运行速度，例如：应用程序中多个类定义了字符串常量TAG，而在JVM中，会编译成多个.class文件，每个.class文件的常量池中，均包含这个TAG常量，但是Dalvik VM在编译成.dex文件之后，其常量池里只有一个TAG常量。</p><p>JVM和Dalvik VM还有一点非常重要的不同，就是基于的架构不同。JVM是基于栈的架构，而Dalvik VM是基于寄存器的架构。相对于基于栈的JVM而言，基于寄存器的Dalvik VM实现虽然牺牲了一些硬件上的通用性，但是它在代码的执行效率上要更胜一筹。一般来讲，VM中指令的解释执行的时间主要花费在以下三个方面：</p><blockquote><p>分发指令；</p><p>访问运算数；</p><p>执行运算；</p></blockquote><p>其中分发指令这个环节对性能的影响最大。在基于寄存器的Dalvik VM中，可以更有效的减少冗余指令的分发，减少内存的读写访问。</p><p>从JVM和Dalvik VM的区别上来说，Dalvik VM主要是针对Android这个嵌入式操作系统的特点进行了各种优化，使其更省电、更省内存、运行效率更高，但是牺牲了一些JVM的与平台无关的特性。实际上，Dalvik VM本就是为Android设计的，无需考虑其它平台的问题。这里只是介绍了JVM和Dalvik VM的两个重要的区别，毕竟本书并不是讲解Android内核的，这里只是点明Dalvik VM的特点，读者对这部分的内容了解即可。</p><h3 id="1-2-3-Android系统平台的优势"><a href="#1-2-3-Android系统平台的优势" class="headerlink" title="1.2.3 Android系统平台的优势"></a>1.2.3 Android系统平台的优势</h3><p>Android系统相对于其它操作系统，有如下几点优势：</p><h4 id="1-开放性"><a href="#1-开放性" class="headerlink" title="1. 开放性"></a>1. 开放性</h4><p>首先就是Android系统的开放性，其开发平台允许任何移动终端厂商加入到Android联盟中来，降低了开发门槛，使其拥有更多的开发者，随着用户和应用的日益丰富，也将推进Android系统的成熟。同时，开放性有利于Android设备的普及以及市场竞争力，这样有利于消费者买到更低价位的Android设备。</p><h4 id="2-丰富的硬件选择"><a href="#2-丰富的硬件选择" class="headerlink" title="2. 丰富的硬件选择"></a>2. 丰富的硬件选择</h4><p>同样由于Android系统的开放性，众多硬件厂商可以推出各种的搭载Android系统的设备。现如今，Android系统不仅仅只是运行在手机上，越来越多的设备开始支持Android系统，如电视、可佩戴设备、数码相机等。</p><h4 id="3-便于开发"><a href="#3-便于开发" class="headerlink" title="3. 便于开发"></a>3. 便于开发</h4><p>Google开放了Android的系统源码，提供了开发者一个自由的开发环境，不必受到各种条条框框的束缚。</p><h4 id="4-Google服务的支持"><a href="#4-Google服务的支持" class="headerlink" title="4. Google服务的支持"></a>4. Google服务的支持</h4><p>Google公司作为一个做服务的公司，它提供了如地图、邮件、搜索等服务，Android系统可以对这些服务进行无缝的结合。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-1-Android发展史与现状&quot;&gt;&lt;a href=&quot;#1-1-Android发展史与现状&quot; class=&quot;headerlink&quot; title=&quot;1.1 Android发展史与现状&quot;&gt;&lt;/a&gt;1.1 Android发展史与现状&lt;/h2&gt;&lt;p&gt;Andy Rubin
      
    
    </summary>
    
    
      <category term="Android基础" scheme="http://yoursite.com/categories/Android%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>PHP开发工具ZendStudio10</title>
    <link href="http://yoursite.com/2015/04/17/ide/PHP%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7ZendStudio10/"/>
    <id>http://yoursite.com/2015/04/17/ide/PHP开发工具ZendStudio10/</id>
    <published>2015-04-17T08:59:00.000Z</published>
    <updated>2019-10-02T08:42:31.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、zend-studio-10破解-汉化，参考文档"><a href="#一、zend-studio-10破解-汉化，参考文档" class="headerlink" title="一、zend studio 10破解/汉化，参考文档"></a>一、zend studio 10破解/汉化，参考文档</h2><p><a href="http://blog.csdn.net/qq1355541448/article/details/16807429" target="_blank" rel="noopener">http://blog.csdn.net/qq1355541448/article/details/16807429</a></p><h2 id="二、安装Composer"><a href="#二、安装Composer" class="headerlink" title="二、安装Composer"></a>二、安装Composer</h2><p>去到官网下载<a href="https://getcomposer.org/download/" target="_blank" rel="noopener">https://getcomposer.org/download/</a></p><p><a href="http://static.oschina.net/uploads/img/201504/17120759_Znd7.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/17120800_gpew.png" alt="image" title="image"></a></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="windows下Composer因php-openssl扩展缺失而安装失败。"><a href="#windows下Composer因php-openssl扩展缺失而安装失败。" class="headerlink" title="windows下Composer因php_openssl扩展缺失而安装失败。"></a>windows下Composer因php_openssl扩展缺失而安装失败。</h3><p>Composer( <a href="https://getcomposer.org/" target="_blank" rel="noopener">https://getcomposer.org/</a> )是PHP下的一个依赖管理工具。你可以在你的项目中声明你所需要用到的类库，然后Composer会在项目中为你安装它们。如果你了解Node的 npm 或者Ruby的 Bundler ，就理解它是做什么的了，但是，它不是包管理器。</p><p>在Windows的Wamp环境下安装Composer(注：Composer要求PHP版本在5.3.2+)，你可能会遇到这种安装失败的情况：出错信息是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &quot;The openssl extension is missing, which will reduce the security and stability of Composer. If possible you should enable it or recompile php with --with-openssl&quot; ，大意就是你的PHP缺少openssl扩展。</span><br><span class="line"></span><br><span class="line">你可能会去屏幕右下角的Wamp的控制台，去加载php的openssl扩展，或者在php.ini中去掉 extension=php_openssl.dll 这一行开头的注释，然后重启server，结果发现还是不行。</span><br><span class="line"></span><br><span class="line">正确的做法是在php的安装目录比如说C:\wamp\bin\php\php5.3.3\中，找到找个目录下的php.ini文件，然后去掉 extension=php_openssl.dll 这一行开头的注释，之后就可以顺利安装Composer了。</span><br><span class="line"></span><br><span class="line">你可以发现上面出现了两个php.ini，是的Wamp在Apache和在CLI(命令行)模式下使用了不同的php.ini文件，当你在WAMP的控制台去启用php_openssl这个扩展，是启用的Apache的，而非CLI。而修改php安装目录中的php.ini配置文件，则可以启用CLI模式下的openssl。</span><br></pre></td></tr></table></figure><h3 id="Win7下运行php-Composer出现SSL报错的问题没有安装CA证书导致的！！！http-my-oschina-net-yearnfar-blog-346727"><a href="#Win7下运行php-Composer出现SSL报错的问题没有安装CA证书导致的！！！http-my-oschina-net-yearnfar-blog-346727" class="headerlink" title="Win7下运行php Composer出现SSL报错的问题没有安装CA证书导致的！！！http://my.oschina.net/yearnfar/blog/346727"></a>Win7下运行php Composer出现SSL报错的问题没有安装CA证书导致的！！！<a href="http://my.oschina.net/yearnfar/blog/346727" target="_blank" rel="noopener">http://my.oschina.net/yearnfar/blog/346727</a></h3><p>CA证书下载地址：<a href="http://curl.haxx.se/docs/caextract.html" target="_blank" rel="noopener">http://curl.haxx.se/docs/caextract.html</a></p><p>然后修改php.ini文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl.cafile= D:/wamp/php/verify/cacert.pem</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、zend-studio-10破解-汉化，参考文档&quot;&gt;&lt;a href=&quot;#一、zend-studio-10破解-汉化，参考文档&quot; class=&quot;headerlink&quot; title=&quot;一、zend studio 10破解/汉化，参考文档&quot;&gt;&lt;/a&gt;一、zend s
      
    
    </summary>
    
    
      <category term="IDE" scheme="http://yoursite.com/categories/IDE/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Win8(X64)下MySQL5.6版本安装及配置</title>
    <link href="http://yoursite.com/2015/04/16/mysql/Win8(X64)%E4%B8%8BMySQL5.6%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2015/04/16/mysql/Win8(X64)下MySQL5.6版本安装及配置/</id>
    <published>2015-04-16T08:59:00.000Z</published>
    <updated>2019-10-02T08:40:35.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="步骤1：双击MySQL安装程序"><a href="#步骤1：双击MySQL安装程序" class="headerlink" title="步骤1：双击MySQL安装程序"></a>步骤1：双击MySQL安装程序</h3><p>官方网站<a href="http://dev.mysql.com/downloads/下载该软件" target="_blank" rel="noopener">http://dev.mysql.com/downloads/下载该软件</a></p><h3 id="步骤2：“Install-MySQL-Products”-文字，会弹出的用户许可证协议窗口，安装类型设置窗口-安装类型界面各设置项含义"><a href="#步骤2：“Install-MySQL-Products”-文字，会弹出的用户许可证协议窗口，安装类型设置窗口-安装类型界面各设置项含义" class="headerlink" title="步骤2：“Install MySQL Products” 文字，会弹出的用户许可证协议窗口，安装类型设置窗口,安装类型界面各设置项含义:"></a>步骤2：“Install MySQL Products” 文字，会弹出的用户许可证协议窗口，安装类型设置窗口,安装类型界面各设置项含义:</h3><blockquote><p>Developer Default 默认安装类型</p><p>Server only 仅作为服务器</p><p>Client only 仅作为客户端</p><p>Full 完全安装类型</p><p>Custom 用户自定义安装类型</p><p>根据自己的情况选择安装，我们这里以自定义安装为例：</p><p><a href="http://static.oschina.net/uploads/img/201504/16165918_FGf6.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165918_xBtP.png" alt="image" title="image"></a></p></blockquote><h3 id="步骤3：选择安装内容及安装目录："><a href="#步骤3：选择安装内容及安装目录：" class="headerlink" title="步骤3：选择安装内容及安装目录："></a>步骤3：选择安装内容及安装目录：</h3><blockquote><p><a href="http://static.oschina.net/uploads/img/201504/16165918_0GLM.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165918_xZtq.png" alt="image" title="image"></a> <a href="http://static.oschina.net/uploads/img/201504/16165919_YIKU.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165919_WpTX.png" alt="image" title="image"></a> <a href="http://static.oschina.net/uploads/img/201504/16165919_vrIa.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165919_0DmF.png" alt="image" title="image"></a></p></blockquote><h3 id="步骤4：选择类型"><a href="#步骤4：选择类型" class="headerlink" title="步骤4：选择类型"></a>步骤4：选择类型</h3><blockquote><p>Developer Machine(开发机器)，个人用桌面工作站，占用最少的系统资源</p><p>Server Machine（服务器），MySQL服务器可以同其它应用程序一起运行，例如FTP、email和web服务器。MySQL服务器配置成使用适当比例的系统资源。</p><p>Dedicated MySQL Server Machine（专用MySQL服务器）：该选项代表只运行MySQL服务的服务器。假定运行没有运行其它应用程序。MySQL服务器配置成使用所有可用系统资源。</p></blockquote><p>根据自己情况选择即可，一般WEB服务器选择第二个，Server Machine即可！个人电脑安装选择第一个，Developer Machine比较好。</p><p><a href="http://static.oschina.net/uploads/img/201504/16165919_d9x7.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165920_8GEz.png" alt="image" title="image"></a></p><h3 id="步骤5：配置密码"><a href="#步骤5：配置密码" class="headerlink" title="步骤5：配置密码"></a>步骤5：配置密码</h3><p><a href="http://static.oschina.net/uploads/img/201504/16165920_a2cR.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165920_c01w.png" alt="image" title="image"></a></p><p>对应的界面中，我们需要设置root用户的密码，在“MySQL Root password”(输入新密码)和“Repeat Password”（确认）两个编辑框内输入期望的密码。也可以单击下面的【Add User】按钮另行添加新的用户。(<strong>注:Current Root Password:为空；如果输入密码了在后面安装会报错</strong>)</p><h3 id="步骤6：设置Windows-Service-Name-lt-可默认-gt-，此名为启动数据库服务名，要记住。"><a href="#步骤6：设置Windows-Service-Name-lt-可默认-gt-，此名为启动数据库服务名，要记住。" class="headerlink" title="步骤6：设置Windows Service Name&lt;可默认&gt;，此名为启动数据库服务名，要记住。"></a>步骤6：<strong>设置Windows Service Name&lt;可默认&gt;，此名为启动数据库服务名，要记住。</strong></h3><p><a href="http://static.oschina.net/uploads/img/201504/16165921_kz1L.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165921_A9pr.png" alt="image" title="image"></a></p><h3 id="步骤7：验证服务："><a href="#步骤7：验证服务：" class="headerlink" title="步骤7：验证服务："></a>步骤7：验证服务：</h3><p>在开始菜单栏-&gt;<strong>附件-&gt;</strong>右键命令提示符-&gt;以管理员身份运行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start MySQL56 为启动数据库服务命令；</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop MySQL56  为停止数据库服务命令。</span><br></pre></td></tr></table></figure><p><a href="http://static.oschina.net/uploads/img/201504/16165921_IAgd.png" target="_blank" rel="noopener"><img src="http://static.oschina.net/uploads/img/201504/16165921_qsYm.png" alt="image" title="image"></a></p><h3 id="步骤8：连接测试："><a href="#步骤8：连接测试：" class="headerlink" title="步骤8：连接测试："></a>步骤8：连接测试：</h3><p>进入bin目录，执行mysql -u root -p 回车输入密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">D:\&gt;cd D:\Programs\WAPM\MySQL\MySQL Server 5.6\bin</span><br><span class="line">D:\Programs\WAPM\MySQL\MySQL Server 5.6\bin&gt;mysql -u root -p</span><br><span class="line">Enter password: ****** Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1 Server version: 5.6.24-log MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;步骤1：双击MySQL安装程序&quot;&gt;&lt;a href=&quot;#步骤1：双击MySQL安装程序&quot; class=&quot;headerlink&quot; title=&quot;步骤1：双击MySQL安装程序&quot;&gt;&lt;/a&gt;步骤1：双击MySQL安装程序&lt;/h3&gt;&lt;p&gt;官方网站&lt;a href=&quot;http:
      
    
    </summary>
    
    
      <category term="IDE" scheme="http://yoursite.com/categories/IDE/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse.ini参数设置</title>
    <link href="http://yoursite.com/2015/04/16/ide/Eclipse.ini%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2015/04/16/ide/Eclipse.ini参数设置/</id>
    <published>2015-04-16T06:03:00.000Z</published>
    <updated>2019-10-02T08:42:28.543Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vmargs下常见参数的意思："><a href="#vmargs下常见参数的意思：" class="headerlink" title="vmargs下常见参数的意思："></a>vmargs下常见参数的意思：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-vmargs  </span><br><span class="line">-Xms40m  </span><br><span class="line">-Xmx256m  </span><br><span class="line">-XX:PermSize=64M  </span><br><span class="line">-XX:MaxPermSize=128M</span><br></pre></td></tr></table></figure><ul><li>-vmargs: 说明后面是VM的参数  </li><li>-Xms40m: 虚拟机占用系统的最小内存,初始分配  </li><li>-Xmx256m: 虚拟机占用系统的最大内存,按需分配  </li><li>-XX:PermSize: 最小堆大小。一般报内存不足时,都是说这个太小, 堆空间剩余小于5%就会警告,建议把这个稍微设大一点,不过要视自己机器内存大小来设置，但不能超过MaxPermSize  </li><li>-XX:MaxPermSize: 最大堆大小。这个也适当大些所以若出现问题，首先请调整 <code>-Xms40m：</code>将其设置的小一些，就可以解决问题<code>PermSize</code>和<code>MaxPermSize</code>指虚拟机为java永久生成对象（Permanate generation）等这些可反射对象分配内 存的限制，这些内存不包括在Heap（堆内存）区之中.</li></ul><h3 id="解决Failed-to-creat-java-virtual-machine问题"><a href="#解决Failed-to-creat-java-virtual-machine问题" class="headerlink" title="解决Failed to creat java virtual machine问题:"></a>解决Failed to creat java virtual machine问题:</h3><p>打开eclipse安装目录下的eclipse.ini文件，修改：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--launcher.XXMaxPermSize  </span><br><span class="line">128M;</span><br></pre></td></tr></table></figure><p>为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--launcher.XXMaxPermSize  </span><br><span class="line">256m</span><br></pre></td></tr></table></figure><p>设置Eclipse使用的JRE为本机安装的JDK目录：<br>在eclipse.ini中添加两行  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> -vm  </span><br><span class="line">C:\\Program Files\\Java\\jdk1.6.0_10\\bin\\javaw.exe</span><br></pre></td></tr></table></figure><ul><li>注意: 要写在两行，写在一行不能生效；这两行要定在-vmargs之前，不然也不能生效。</li></ul><h3 id="我的eclipes-ini文件配置如下："><a href="#我的eclipes-ini文件配置如下：" class="headerlink" title="我的eclipes.ini文件配置如下："></a>我的eclipes.ini文件配置如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-startup</span><br><span class="line">plugins/org.eclipse.equinox.launcher_1.3.0.v20140415-2008.jar</span><br><span class="line">--launcher.library</span><br><span class="line">plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.200.v20140603-1326</span><br><span class="line">-product</span><br><span class="line">org.eclipse.epp.package.java.product</span><br><span class="line">-showsplash</span><br><span class="line">org.eclipse.platform</span><br><span class="line">--launcher.defaultAction</span><br><span class="line">openFile</span><br><span class="line">--launcher.XXMaxPermSize</span><br><span class="line">384M</span><br><span class="line">-vm</span><br><span class="line">C:\Program Files\Java\jre7\bin\javaw.exe</span><br><span class="line">-vmargs</span><br><span class="line">-Dcom.sun.management.jmxremote </span><br><span class="line">-Dosgi.requiredJavaVersion=1.6</span><br><span class="line">-Xverify:none</span><br><span class="line">-Xmn128m</span><br><span class="line">-Xms256m</span><br><span class="line">-Xmx768m</span><br><span class="line">-Xss1m</span><br><span class="line">-XX:PermSize=128M</span><br><span class="line">-XX:MaxPermSize=512M</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;vmargs下常见参数的意思：&quot;&gt;&lt;a href=&quot;#vmargs下常见参数的意思：&quot; class=&quot;headerlink&quot; title=&quot;vmargs下常见参数的意思：&quot;&gt;&lt;/a&gt;vmargs下常见参数的意思：&lt;/h3&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
    
      <category term="IDE" scheme="http://yoursite.com/categories/IDE/"/>
    
    
      <category term="eclipse" scheme="http://yoursite.com/tags/eclipse/"/>
    
  </entry>
  
</feed>
